from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.fsm.context import FSMContext

from keyboards.reply import create_user_card_kb, start_bot_kb, main_bot_keyboard
from keyboards.builders import basic_reply_kb_builder
from bot_states import BotByStartLaunch, BotMode, Admin
from database_actions import Database
from filters import IsAdmin

router = Router()
bot_start_initiated = False


@router.message(CommandStart(), IsAdmin())
async def start_admin_session(message: Message, state: FSMContext):
    global bot_start_initiated
    bot_start_initiated = True
    await state.set_state(Admin.IsIn)
    await message.answer(
        "–í—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=basic_reply_kb_builder(["–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "/exit"]),
    )


@router.message(CommandStart())
async def start(message: Message, state: FSMContext, _db: Database):
    # –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∫–æ–ª–ª–∏–∑–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    global bot_start_initiated
    if bot_start_initiated:
        await message.answer(
            "–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /help"
        )
        return
    bot_start_initiated = True
    check_user = await _db.get_user_by_id(message.from_user.id)
    if check_user is not None:
        await state.set_state(BotMode.MainKeyboardMode)
        await message.answer(
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!‚úã\nüî•–†–∞–¥—ã —Å–Ω–æ–≤–∞ –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!üî•\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help üÜò",
            reply_markup=main_bot_keyboard(),
        )
        return
    await state.set_state(BotByStartLaunch.Running)
    await message.answer(
        "üî•–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Sportics Bot - –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤!üî•"
    )
    await message.answer(
        "–í–∏–¥–Ω–æ, —á—Ç–æ –≤—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º.\n–î–∞–≤–∞–π—Ç–µ —Ç–æ–≥–¥–∞ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –≤–∞—Å, —á—Ç–æ–±—ã –∏ –≤—ã –º–æ–≥–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –≤–∞—Å –≤–∏–¥–µ—Ç—å üîé.\n–ù–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.",
        reply_markup=create_user_card_kb,
    )


@router.message(CommandStart())
async def start(message: Message, state: FSMContext, _db: Database):
    # –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∫–æ–ª–ª–∏–∑–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    global bot_start_initiated
    if bot_start_initiated:
        await message.answer(
            "–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /help"
        )
        return
    bot_start_initiated = True
    check_user = await _db.get_user_by_id(message.from_user.id)
    if check_user is not None:
        await state.set_state(BotMode.MainKeyboardMode)
        await message.answer(
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!‚úã\nüî•–†–∞–¥—ã —Å–Ω–æ–≤–∞ –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!üî•\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help üÜò",
            reply_markup=main_bot_keyboard(),
        )
        return
    await state.set_state(BotByStartLaunch.Running)
    await message.answer(
        "üî•–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Sportics Bot - –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤!üî•"
    )
    await message.answer(
        "–í–∏–¥–Ω–æ, —á—Ç–æ –≤—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º.\n–î–∞–≤–∞–π—Ç–µ —Ç–æ–≥–¥–∞ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –≤–∞—Å, —á—Ç–æ–±—ã –∏ –≤—ã –º–æ–≥–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –≤–∞—Å –≤–∏–¥–µ—Ç—å üîé.\n–ù–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.",
        reply_markup=create_user_card_kb,
    )


@router.message(Command("help"))
async def on_help_handler(message: Message):
    help_message_file = "./bot_data/on_help_data/on_help_text.txt"
    file = open(help_message_file, encoding="utf-8")
    help_text = file.read()
    await message.answer(help_text)


@router.message(BotMode.MainKeyboardMode, Command("exit"))
async def on_exit_handler(message: Message, state: FSMContext):
    global bot_start_initiated
    await state.clear()
    bot_start_initiated = False
    await message.answer(
        "–í—ã –æ—Ç–ª—é—á–∏–ª–∏—Å—å –æ—Ç –±–æ—Ç–∞.üì¥\n–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω–æ–∏–º–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É.üîò",
        reply_markup=start_bot_kb,
    )


@router.message(BotMode.MainKeyboardMode, Command("delete_profile"))
async def on_delete_profile(message: Message, state: FSMContext, _db: Database):
    await state.set_state(BotMode.DeleteProfileState)
    await message.answer(
        "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?",
        reply_markup=basic_reply_kb_builder(["–î–∞", "–ù–µ—Ç"]),
    )


@router.message(BotMode.DeleteProfileState, F.text.in_(["–î–∞", "–ù–µ—Ç"]))
async def on_delete_profile(message: Message, state: FSMContext, _db: Database):
    global bot_start_initiated
    if message.text == "–î–∞":
        await _db.delete_user(message.from_user.id)
        await state.clear()
        bot_start_initiated = False
        await message.answer(
            "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª–µ–Ω!\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start",
            reply_markup=start_bot_kb,
        )
    else:
        await state.set_state(BotMode.MainKeyboardMode)
        await message.answer(
            "–•–æ—Ä–æ—à–æ. –¢–æ–≥–¥–∞ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –≤–∞–º –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!", reply_markup=main_bot_keyboard()
        )


@router.message(StateFilter(None))
async def unknown_command_handler(message: Message):
    global bot_start_initiated
    if bot_start_initiated:
        await message.answer(
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ /help"
        )
    else:
        await message.answer(
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ /help",
            reply_markup=start_bot_kb,
        )
