import os

from aiogram import Router, F, Bot
from aiogram.types import Message, BufferedInputFile
from aiogram.fsm.context import FSMContext

from bot_states import UserRegistrationForm, BotMode
from bot_data.constants import main_kb_button_names
from keyboards.reply import get_location_kb, sex_kb, main_bot_keyboard
from keyboards.builders import basic_kb_builder
from filters import CheckAge
from database_actions import Database
from handlers.main_kb_handlers.user_profile_repr import UserProfile

router = Router()


# UserForm.name field setup
@router.message(UserRegistrationForm.name, ~F.text)
async def wrong_user_form_name_input(message: Message, state: FSMContext):
    await message.answer(
        '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è —Ç–µ–∫—Å—Ç–æ–º. ‚å®Ô∏è',
        reply_markup=basic_kb_builder(message.from_user.first_name)
    )


@router.message(UserRegistrationForm.name, F.text)
async def set_user_form_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(UserRegistrationForm.age)
    await message.answer(
        '–î–∞–ª—å—à–µ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç.\n–°–∫–æ–ª—å–∫–æ –≤–∞–º –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç?'
    )


# UserForm.age field setup
@router.message(UserRegistrationForm.age, ~F.text)
async def wrong_type_user_form_age_input(message: Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç –æ–¥–Ω–∏–º —á–∏—Å–ª–æ–º - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç. ‚å®Ô∏è")


@router.message(UserRegistrationForm.age, CheckAge())
async def set_user_form_age(message: Message, state: FSMContext):
    await state.update_data(age=message.text)
    await state.set_state(UserRegistrationForm.sex)
    await message.answer(
        "–î–∞–ª—å—à–µ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª. –î–ª—è –≤—ã–±–æ—Ä–∞ –µ—Å—Ç—å –∫–Ω–æ–∫–∏ –æ–∫–æ–ª–æ –ø–∞–Ω–µ–ª–∏ –≤–≤–æ–¥–∞.\n‚ôÄÔ∏è –∏–ª–∏ ‚ôÇÔ∏è",
        reply_markup=sex_kb
    )


# UserForm.sex field setup
@router.message(UserRegistrationForm.sex, F.text.in_(["–ü–∞—Ä–µ–Ω—å ‚ôÇÔ∏è", "–î–µ–≤—É—à–∫–∞ ‚ôÄÔ∏è"]))
async def set_user_form_sex(message: Message, state: FSMContext):
    await state.update_data(sex=message.text)
    await state.set_state(UserRegistrationForm.location)
    await message.answer(
        '–û—Ç–ª–∏—á–Ω–æ! –î–∞–ª—å—à–µ, —á—Ç–æ–±—ã –≤–∞–º –±—ã–ª–æ –ª–µ–≥—á–µ –Ω–∞–π—Ç–∏ —Å–µ–±–µ –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.üìç\n–î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏.\n\n–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. üì±',
        reply_markup=get_location_kb
    )


@router.message(UserRegistrationForm.sex)
async def wrong_user_form_sex_input(message: Message, state: FSMContext):
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Ç—Å–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –æ–∫–æ–ª–æ –ø–∞–Ω–µ–ª–∏ –≤–≤–æ–¥–∞. ‚å®Ô∏è",
        reply_markup=sex_kb
    )


# UserForm.location field setup
@router.message(UserRegistrationForm.location, F.location)
async def set_user_form_location(message: Message, state: FSMContext):
    user_location = {
        "latitude": message.location.latitude,
        "longitude": message.location.longitude
    }
    await state.update_data(location=user_location)
    await state.set_state(UserRegistrationForm.about)
    await message.answer(
        f'–û—Ç–ª–∏—á–Ω–æ! üî•\n–î–∞–ª—å—à–µ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö. ‚ÑπÔ∏è'
    )


# UserForm.about field setup
@router.message(UserRegistrationForm.about, F.text)
async def set_user_form_about(message: Message, state: FSMContext):
    await state.update_data(about=message.text)
    await state.set_state(UserRegistrationForm.photo)
    example_photo_filename = os.path.join(
        os.getcwd(), './bot_data/profile_photo_example.png')
    example_photo_file = open(example_photo_filename, 'rb')
    example_photo = BufferedInputFile(
        example_photo_file.read(),
        "profile_photo_example.png"
    )
    await message.answer(
        "–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å - —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. üì∑",
    )
    await message.answer_photo(
        photo=example_photo,
        caption=f'\n–í–∞—à–µ –∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª.\n–û —Å–µ–±–µ:\n–î–∞–ª—å—à–µ –±—É–¥–µ—Ç –≤–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –≤–≤–µ–ª–∏.',
    )
    await message.answer(
        '–≠—Ç–æ —à–∞–±–ª–æ–Ω —Ç–æ–≥–æ, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–∏—Ç—å –≤–∞—à –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å.\n–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (–∫–Ω–æ–ø–∫–∞ —Å–Ω–∏–∑—É) –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.',
        reply_markup=basic_kb_builder("–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è")
    )


@router.message(UserRegistrationForm.about, ~F.text)
async def wrong_user_form_about_input(message: Message, state: FSMContext):
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å —Å–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ."
    )


# UserForm.photo field setup
async def view_final_user_profile(message: Message, state: FSMContext, photo: str):
    await state.update_data(photo=photo)
    data = await state.get_data()
    await message.answer("–¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.")
    await message.answer_photo(
        data['photo'],
        caption=UserProfile.get_profile_string(data),
        reply_markup=basic_kb_builder(["–°–æ–∑–¥–∞—Ç—å"])
    )


@router.message(UserRegistrationForm.photo, F.photo)
async def set_user_form_photo(message: Message, state: FSMContext):
    photo = message.photo[-1].file_id
    await view_final_user_profile(message, state, photo)


@router.message(UserRegistrationForm.photo, F.text == "–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è")
async def set_user_form_photo_profile(message: Message, state: FSMContext, bot: Bot):
    user_id = message.from_user.id
    profiles_photos = await bot.get_user_profile_photos(user_id=user_id, limit=1)
    photo = profiles_photos.photos[0][-1].file_id
    await view_final_user_profile(message, state, photo)


@router.message(UserRegistrationForm.photo, F.text == "–°–æ–∑–¥–∞—Ç—å")
async def upload_to_database_user_form_info(message: Message, state: FSMContext, _db: Database, bot: Bot):
    user_data = await state.get_data()
    user_data['user_id'] = message.from_user.id
    user_data['username'] = message.from_user.username
    user_data['checked_by_admin'] = False
    result = await _db.insert_user(user_data, bot)
    # print(result)
    await state.clear()
    await state.set_state(BotMode.MainKeyboardMode)
    await message.answer(
        "üî•–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üî•\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–µ–±–µ –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.üîé"
    )
    await message.answer(
        f"–ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã: –ª—é–±–æ–π –ø–æ–ª –∏ –ø–æ–∏—Å–∫ –≤ —Ä–∞–¥–∏—É—Å–µ 5 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤. \n–ß—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '{main_kb_button_names[1]}'.",
        reply_markup=main_bot_keyboard()
    )


@router.message(UserRegistrationForm.photo, ~F.photo)
async def wrong_user_form_photo_input(message: Message, state: FSMContext):
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è",
        reply_markup=basic_kb_builder("–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è")
    )
